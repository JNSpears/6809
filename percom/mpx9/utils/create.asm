 NAM CREATE
 TTL QUICK EDITOR, FILE BUILDER
 
****************************************
*
* CREATE IS A SIMPLE FILE BUILDER FOR
* OPERATION WITH THE PERCOM MPX-9 DOS
* IT IS CALLED BY :
*
* MPX? [N/]CREATE <FILENAME> [OPTIONS]
*
* FIRST, CREATE WILL CREATE THE FILE
* WITH THE SPECIFIED LENGTH, (DEFAULT 8)
* AND WRITE ALL BLOCKS WITH EOT CODES.
*
* THEN YOU WILL BE ALLOWRD TO PLACE
* TEXT IN THE FILE ONE LINE AT A TIME.
* YOU WILL BE PROMPTED WITH THE LINE
* NUMBER. ENTERING A /# AS THE FIRST
* TWO CHARACTERS OF A LINE WILL RESUILT
* IN THE FILE BEING CLOSED. ONCE A 
* LINE HAS BEEN ENTERED, THERE IS NO 
* CALLING IT BACK TO EDIT.
*
* OPTIONS: THERE ARE TWO OPTIONS.
*
*  /X - RESULTS IN CREATION OF A TEXT
*       FILE WITH AN 'EX' EXTENSIONS.
*       ( THE EXTINSION DEFAULTS TO
*	'TX'. ) YOU MAY OVER-RIDE 
*	THE DEFAULT EXTENSION BY
* 	BY SPECIFIYING AN EXTENSION 
*	IN THE FILENAME.
*  /# - RESULTS IN THE CREATION OF AN
* 	EMPTY FILE. THE FILE WITH BE 
*	WRITTEN WITH EOT CODES AND
*	CLOSED.
*
* WRITTEN BY TIM MCKEE ON 13 JAN 1981
*
****************************************

* VERSION 1.00

**************************************************
* SWI3 PARAMETER DEFINITIONS
**************************************************
* PSYMON (TM) ROUTINE REFERENCES
MONITR EQU 0 ;RETURN TO MONITOR MODE
REQIO EQU 1 ;REQUEST I/O
OUTCHR EQU 2 ;OUTPUT CHARACTER TO TERMINAL
INCHR EQU 3 ;INPUT CHARACTER FROM TERMINAL
PSTRNG EQU 4 ;PRINT STRING
GETHEX EQU 5 ;GET HEX NUMBER
DSPDBY EQU 6 ;DISPLAY DOUBLE BYTE
DSPSBY EQU 7 ;DISPLAY SINGLE BYTE
 SPC 1
* MPX/9 ROUTINE REFERENCES
MPX    EQU 8    ;RETURN TO MPX/9
GETLIN EQU 9    ;GET * LINE OF INPUT
SKPSPC EQU 10   ;SKIP SPACES IN LINE BUFFER
GETWRD EQU 11   ;GET THE NEXT WORD IN LINE
PROCMD EQU 12   ;PROCESS COMMAND LINE
RPTERR EQU 13   ;REPORT ERROR
LOCFIL EQU 14   ;LOCATE FILE IN DIRECTORY
LOCSPC EQU 15   ;LOCATE SPACE IN DIRECTORY
RDDRCT EQU 16   ;READ DISK DIRECTORY
WTDRCT EQU 17   ;WRITE DISK DIRECTORY
INTFCB EQU 18   ;INITIALIZE FCB
OPNFIL EQU 19   ;OPEN FILE
CLSFIL EQU 20   ;CLOSE FILE
RDFIL  EQU 21   ;READ A FILE (BYTE)
WTFIL  EQU 22   ;WRITE A FILE (BYTE)
RDBLK  EQU 23   ;READ A BLOCK
WTBLK  EQU 24   ;WRITE A BLOCK
MEMLOD EQU 25   ;LOAD A MEMORY SEGMENT
MEMSAV EQU 26   ;SAVE A MEMORY SEGMENT
COMPAR EQU 27   ;COMPARE STRINGS
BLKMOV EQU 28   ;BLOCK MOVE
DECNUM EQU 29   ;GET DECIMAL NUMBER
HEXNUM EQU 30   ;GET HEXADECIMAL NUMBER
DSPDEC EQU 31   ;DISPLAY DECIMAL NUMBER & SPACE
DELFIL EQU 32   ;DELETE A DISK FILE
LOCDCB EQU 33   ;LOCATE DCB FOR DEVICE
ADDDCB EQU 34   ;ADD DCB TO DEVICE LIST
DELDCB EQU 35   ;DELETE DCB FROM DEVICE LIST
 SPC 1
SYSLIM EQU 35   ;LAST VALID CALL


; SYSTEM ADDRESS CONSTANTS

ROM1	EQU $FC00 ; BASE ADDRESS OF PSYMON ROM
ROM2	EQU $F800 ; BASE ADDRESS OF EXTENSION ROM
RAM	EQU $F380 ; BASE ADDRESS OF SCRATCHPAD RAM;
FREE	EQU $F000 ; ADDRESS OF FREE RAM


; PSYMON RAM DEFINITIONS
	ORG RAM
; PSYMON INTERNAL STACK & REGISTER SPACE
; OFFSETS TO RAM BASE IN PARENTHESES

	RMB 55 ; STACK SPACE R1
STACK	EQU * ; (55) TOP OF STACK

REGC	RMB 1 ; (55) CONDITION CODE REGISTER

REGA	RMB 1 ; (56) A REGISTER I-‘
REGB	RMB 1 ; (57) B REGISTER
REGD	RMB 1 ; (58) DIRECT PAGE REGISTER
REGX	RMB 2 ; (59) X REGISTER
REGY	RMB 2 ; (61) Y REGISTER M
REGU	RMB 2 ; (63) U STACK POINTER
REGP	RMB 2 ; (65) PROGRAM COUNTER

; PSYMON BREAKPOINT TABLE
BPTABL	RMB 15 ; (67) SPACE FOR 5 BREAKPOINTS
BPTEND	EQU * ; (82) END OF BREAKPOINT TABLE

; PSYMON WORK AREAS
MEMPTR	RMB 2 ; (82) MEMORY POINTER FOR ‘M’ COMMAN1
USRTBL	RMB 2 ; (84) ADDRESS OF USER COMMAND TABLE)
COMAND	RMB 1 ; (86) COMMAND CHARACTER STORAGE
CKSUM	RMB 1 ; (87) CHECKSUM FOR LOAD AND SAVE
BEGADD	RMB 2 ; (88) BEGIN ADDRESS FOR SAVE
ENDADD	RMB 2 ; (90) END ADDRESS FOR SAVE
STKPTR	RMB 2 ; (92) CONTENTS OF STACK POINTER

; THE PSYMON CONSOLE DCB
CONDCB	RMB 10 ; (94) STANDARD DCB

; PSYMON DCB POINTERS
DCBCHN	RMB 2 ; (104) BASE OF DCB CHAIN
CIDCB	RMB 2 ; (106) CONSOLE INPUT DCB
CEDCB	RMB 2 ; (108) CONSOLE ECHO DCB
CODCB	RMB 2 ; (110) CONSOLE OUTPUT DCB
TPDCB	RMB 2 ; (112) CASSETTE TAPE DCB

; PSYMON VECTORS
SWI3V	RMB 2 ; (114) SOFTWARE INTERRUPT 3
SWI2V	RMB 2 ; (116) SOFTWARE INTERRUPT 2
FIRQV	RMB 2 ; (118) FAST INTERRUPT REQUEST
IRQV	RMB 2 ; (120) INTERRUPT REQUEST
SWIV	RMB 2 ; (122) SOFTWARE INTERRUPT
NMIV	RMB 2 ; (124) NON-MASKABLE INTERRUPT
FRERAM	RMB 2 ; (126) ADDRESS OF FREE RAM


; DCB OFFSETS
DCBLNK	EQU 0	; POINTER TO NEXT DCB IN CHAIN
DCBDID	EQU 2	; ASCII 2 CHAR DEVICE ID
DCBDVR	EQU 4	; DEVICE DRIVER ADDR
DCBIOA	EQU 6	; DEVICE I/O ADDR
DCBERR	EQU 8	; ERROR STATUS CODE
DCBEXT	EQU 9	; NUMBER OF EXTENSION BYTES IN DCB
DCBAPP	EQU 10	; DCB EXTENSION FOR DRIVER

DCBDRV EQU 10 ;DISK DRIVE # (I-4)
DCBBLK EQU 11 ;DISK BLOCK
DCBBUF EQU 13 ;BUFFER ADDRESS

; DCB FUNCTION CODES
READFN	EQU 1	; READ FUNCTION CODE
WRITFN	EQU 2	; WRITE FUNCTION CODE
STATFN	EQU 4	; STATUS FUNCTION CODE
CNTLFN	EQU 8	; DEVICE CONTROL FUNCTION CODE

*****************************
* SOFTWARE VECTORS
*****************************
RAMV		EQU $FFDE
DSPSBYV		EQU $FFE0
DSPDBYV		EQU $FFE2
GETHEXV		EQU $FFE4
PSTRNGV	EQU $FFE6
INCHRV		EQU $FFE8
OUTCHRV		EQU $FFEA
REQIOV		EQU $FFEC
MONENTV		EQU $FFEE

**************************************************
* ASCII CHARACTER CONSTANTS
**************************************************
CR      EQU $0D ; CARRIAGE RETURN
LF      EQU $0A ; LINE FEED
NUL     EQU $00 ; NULL
BS      EQU $08 ; BACKSPACE
CAN     EQU $18 ; CANCEL
SP      EQU $20 ; SPACE
FF      EQU $0C ; FORM FEED FOR PRINTER
BRK     EQU $03 ; CRTL-C

 ORG 0 ;FORMAT AFTER INIT OR CLOSE
FCBOPN RMB 1 ;SET TO 0 BY INIT OR CLOSE
FCBDRN RMB 1 ;FILE DRIVE
FCBDBA RMB 2 ;DISK BUFFER ADDRESS
FCBNAM RMB 8 ;FILE NAME
FCBSUF RMB 2 ;FILE SUFFIX
FCBSIZ RMB 2 ;FILE SIZE
 RMB 15 ; RESERVED
FCBUFF RMB 1 ;UNOPENED FILE FLAG (CLEARED BY INIT, CLOSE)
 SPC 1
 ORG 0 ;FORMAT AFTER OPEN
FCBUSE RMB 1 ;FILE USAGE (1=R, 2=W, 3=R/W)
FCBDRV RMB 1 ;FILE DRIVE
FCBBUF RMB 2 ;BUFFER ADDRESS
FCBCNT RMB 1 ;CURRENT BYTE COUNT
FCBADD RMB 2 ;ADDRESS VECTOR
FCBTYP RMB 1 ;BLOCK TYPE CODE (USER DEFINED)
FCBSTR RMB 2 ;FILE START BLOCK
FCBEND RMB 2 ;FILE END BLOCK
FCBCUR RMB 2 ;CURRENT RELATIVE BLOCK
FCBPRV RMB 2 ;PREVIOUS RELATIVE BLOCK
FCBNXT RMB 2 ;NEXT RELATIVE BLOCK
FCBEXT RMB 2 ;DIRECTORY EXTENSION BYTES
FCBPTR RMB 2 ;DATA POINTER
 RMB 9 ;RESERVED SPACE
FCBSTS RMB 1 ;FILE STATUS (SET BY OPEN)

**************************************************
* PROGRAM (POSITION INDEPENDANT)
**************************************************
	ORG $1000
START:
	CLR	MTFLAG,PCR
	CLR	EXFLAG,PCR
	CLR	LINNO,PCR
	CLR	LINNO+1,PCR
	SWI3
	FCB	SKPSPC
	LBEQ	SNERR
	LEAY	FCB,PCR
	SWI3
	FCB	INTFCB
	BNE	RETRN
OPTLOP
	SWI3
	FCB	SKPSPC
	BEQ	PROCES
	CMPA	#'/
	LBNE 	SNERR
	LEAX 	1,X
	LDA	,X+
	CMPA 	#'X
	BNE 	NOTEX
	STA 	EXFLAG,PCR
	BRA 	OPTLOP
NOTEX	CMPA	#'#
	LBNE	SNERR
	STA	MTFLAG,PCR
	BRA 	OPTLOP
	
PROCES	LDD 	FCBSUF,Y
	BNE	EXPLCT
	LDD	#$5458	DEFAULT 'TX'
	TST	EXFLAG,PCR
	BEQ	TXDFLT
	LDD	#$4858 USE 'EX' INSTEAD.
TXDFLT	STD	FCBSUF,Y
EXPLCT	SWI3
	FCB 	LOCFIL
	BEQ 	EXISTS
	CMPB	#10
	BEQ	NTEXST
	TSTB
	RTS
	
EXISTS	LEAX	DELQRY,PCR
	SWI3
	FCB	PSTRNG
	LEAX	LINBUF,PCR
	LDB	#4
	SWI3
	FCB	GETLIN
	BEQ	EXISTS
	CMPA	#'Y
	BNE	NTEXST
	CMPA	#'N
	BNE	EXISTS
	CLRB
RETRN	RTS

NTEXST	LDA	#2
	LEAX	DKBUFR,PCR
	LDU	FCBSIZ,Y
	SWI3
	FCB	OPNFIL
	BNE 	RETRN
	LDA	#4
	TFR	U,X
	LDB	#-1
	STB	,-S
INLP	SWI3
	FCB	WTFIL
	BNE	RETRN
	DEC	,S
	BNE	INLP
	LEAX	-1,X
	BNE	INLP
	LEAS	1,S
	SWI3
	FCB	CLSFIL
	TST	MTFLAG,PCR
	BEQ	EDIT
	CLRB
	RTS
	
EDIT	LDA	#2
	LEAX	DKBUFR,PCR
	SWI3
	FCB 	OPNFIL
	BNE 	RETRN
LINEIN	LDA	#LF
	SWI3
	FCB	OUTCHR
	LDD	LINNO,PCR
	ADDD	#1
	STD	LINNO,PCR
LINEN1	LDD	LINNO,PCR
	SWI3
	FCB	DSPDEC
	LDB	#80
	LEAX	LINBUF,PCR
	SWI3
	FCB	GETLIN
	BNE	NOTDEL
	LEAX    LINDEL,PCR
	SWI3
	FCB	PSTRNG
	BRA	LINEN1
NOTDEL	LDD	,X
	CMPD	#$2F23	; CHECK FOR '/#'
	BNE	SENDLN
	LDA	#4
	SWI3	
	FCB	WTFIL
	BNE	RETRN
	SWI3
	FCB	CLSFIL
	RTS
SNERR	LDB	#17
	RTS

SENDLN	LDA	,X+
	SWI3
	FCB	WTFIL
	LBNE	RETRN
	CMPA	#CR
	BNE	SENDLN
	BRA	LINEIN
	
DELQRY	FCB	CR,LF,LF,7
	FCC	'DO YOU WISH TO OVER-RITE EXISTING FILE'
	FCB	'?+$80
	
LINDEL 	FCB	CR,LF,7
	FCC	'^ ^ ^ ^ PREVIOUS LINE DELETED ^ ^ ^ ^'
	FCB	CR,LF+$80

ENDCOD	EQU *-1

MTFLAG	RMB	1
EXFLAG	RMB	1
LINNO	RMB	2
FCB	RMB	32
DKBUFR	RMB	256
LINBUF	RMB	80

ENDPGM	EQU *-1


	
	
	