 NAM MEMTST
 TTL GALLOPING MEMORY TEST FOR 6809 UNDER MPX-9 DOS
 SPC 1
**************************************************
*                                                *
* MEMTST WILL PERFORM A COMPREHENSIVE CHECK OF   *
*        THE MEMORY LOCATIONS (INCLUSIVE) THAT   *
*        ARE SUPPLIED AS PARAMETERS.             *
*                                                *
* MPX? [N/]MEMTEST <BEGIN> <END>                 *
* >>> <BEGIN> <END>                              *
*                                                *
* THE FIRST LINE WILL FETCH THE UTILITY FROM     *
* DRIVE #N AND EXECUTE IT.  ADDRESSES <BEGIN>    *
* AND <END> MUST BE GIVEN IN HEXADECIMAL.  AFTER *
* THE UTILITY HAS CHECKED THE MEMORY, IT WILL    *
* RETURN WITH A PROMPT OF '>>>!' AS SHOWN ON THE *
* SECOND LINE.  ENTER JUST A CARRIAGE RETURN IF  *
* YOU ARE FINISHED, OR ENTER A NEW ADDRESS RANGE *
* TO BE CHECKED.                                 *
*                                                *
* CAUTION: DO NOT TEST THE LOCAUIONS CONTAINING  *
*          MEMTST.  THE RESULTS ARE DISASTEROUS. *
*          THE SAME APPLES FOR THE HIGHEST 4K    *
*          MEMORY BLOCK THAT CONTAINS MPX-9.     *
*                                                *
* WRITTEN BY TIM MCKEE SEPTEMBER 12, 1980        *
*                                                *
**************************************************
 SPC 1
* VERSION 1.00
 SPC 2
* SYSTEM CALL PARAMETERS
 SPC 1
OUTCHR EQU 2
PSTRNG EQU 4
GETLIN EQU 9
SKPSPC EQU 10
HEXNUM EQU 30
 SPC 1
* PROGRAM EQUATES
 SPC 1
CR EQU $D
LF EQU $A
 SPC 3
 ORG $1000
 SPC 1
* THIS PROGRAM IS POSITION INDEPENDENT
 SPC 1
MEMTST BRA PROC SKIP PROMPT ON FIRST GO
PROMPT LEAX PRMPT,PCR
 SWI3
 FCB PSTRNG SEND PROMPT STRING
 LEAX BUFR,PCR
 LDB #12 ALLOW 11 CHARS INPUT
 SWI3
 FCB GETLIN GET INPUT LINE
 BEQ PROMPT LOOP ON CANCEL
 SPC 1
PROC SWI3
 FCB SKPSPC POINT TO FIRST WORD
 BNE *+4 EXIT IF NO INPUT
 CLRB
 RTS
 SPC 1
 SWI3
 FCB HEXNUM GET STARTING ADDRESS
 BNE SYNERR SYNTAX ERROR IF NOT THERE
 STD BEG,PCR STORE IT
 STD BEGADD,PCR
 SWI3
 FCB SKPSPC POINT TO NEXT WORD
 BEQ SYNERR SYNTAX ERROR IF NOT THERE
 SWI3
 FCB HEXNUM
 BEQ *+5 SYNTAX ERROR ON NUMBER ERROR
SYNERR LDB #17 REPORT SYNTAX ERROR
 RTS
 SPC 1
 STD END,PCR STORE END ADDRESS
NEWBLK LDD BEGADD,PCR GET BLOCK STASTING ADDRESS
 ADDD #511
 CMPD END,PCR SEE IF PAST END
 BLS LONG SKIP IF NOT
 LDD END,PCR SET TO END IF PAST
LONG STD ENDADD,PCR STORE ENDING ADDRESS
 SPC 1
NXTBLK BSR GALLOP
 LDA #'+
 SWI3
 FCB OUTCHR SEND '+' ON COMPLETE BLOCK
 INC BEGADD,PCR ADD 256 TO BEGADD
 LDD BEGADD,PCR GET BEGINNING ADDRESS
 CMPD END,PCR SEE IF PAST END
 BLO NEWBLK LOOP IF NOT
 LDA #'/
 SWI3
 FCB OUTCHR SEND '/' WHEN TEST COMPLETE
 BRA PROMPT
 SPC 2
GALLOP CLRB
NEWBG LDX BEGADD,PCR
INIT STB ,X+
 CMPX ENDADD,PCR
 BLS INIT
 LDX BEGADD,PCR
 SPC 1
NEWI TFR B,A
 COMA
 STA ,X
 TFR X,Y
 SPC 1
NEWJ LEAY 1,Y
 LDA ,X
 COMA
 STB ,-S
 CMPA ,S+
 BNE ERRX
 LDA ,Y
 STB ,-S
 CMPA ,S+
 BNE ERRY
 CMPY ENDADD,PCR
 BNE NEWJ
 LEAX 1,X
 CMPX ENDADD,PCR
 BNE NEWI
 CMPB #-1
 BEQ PASS
 COMB
 BRA NEWBG
PASS RTS
 SPC 2
ERRY EXG X,Y
ERRX SWI
 SPC 2
PRMPT FCB CR,LF,'>,'>,'>,$20+$80
 SPC 1
ENDCOD EQU *-1
 SPC 2
*WORKING STORAGE
 SPC 1
BEG RMB 2
END RMB 2
BEGADD RMB 2
ENDADD RMB 2
BUFR RMB 12
 SPC 1
ENDPGM EQU *-1
 SPC 1
 END
