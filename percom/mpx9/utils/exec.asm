 NAM EXEC
 TTL EXECUTOR FOR MPX-9
 SPC 1
**********************************************
*                                            *
* EXEC WILL EXECUTE A SERIES OF INSTRUCTIONS *
*      FROM A TEXT FILE.                     *
*                                            *
* THIS PROGRAM WILL ONLY START PROGRAMS, ALL *
* INPUT THAT WOULD BE MADE TO QUERIES FROM   *
* THE PROGRAM MUST STILL BE MADE UNLESS YOU  *
* HAVE SPECIFIED AN -INVECTOR- FILE.         *
*                                            *
* MPX? EXEC <FILENAME>                       *
*                                            *
* THE TEXT FILE GIVEN BY <FILENAME> WILL BE  *
* GIVEN THE EXTENSION OF '.EX' IF YOU DO NOT *
* SPECIFY ONE. THE FILE SHOULD CONSIST OF    *
* MPX-9 COMMAND LINES, BUT PROVISION IS MADE *
* FOR COMMENTS AND SOME NICE OPTIONS.        *
*                                            *
* ANYTHING AFTER A '*' WILL BE IGNORED AND   *
* CONSIDERED A COMMENT.                      *
*                                            *
* THE SYMBOL '/' INDICATES THAT AN OPTION IS *
* BEING SPECIFIED. OPTIONS ARE AS FOLLOWS    *
*                                            *
*   // - MUST OCCUR TO SIGNIFY THAT YOU ARE  *
*        FINISHED. CONTROL WILL RETURN VIA   *
*        AN RTS.                             *
*                                            *
*   /B - WILL RING THE CONSOLE BELL.  MAY BE *
*        FOLLOWED BY MORE COMMANDS/OPTIONS.  *
*                                            *
*   /E   WILL ERASE THE CONSOLE SCREEN.  MAY *
*        BE FOLLOWED BY MORE COMMANDS AND/OR *
*        OPTIONS.                            *
*                                            *
*   /F - WILL OUTPUT A FORM FEED. MAY BE     *
*        FOLLOWED BY MORE COMMANDS/OPTIONS.  *
*                                            *
*   /K - MUST BE OF FORM /K=A WHERE A IS AN  *
*        ASCII CHARACTER. IF THE INPUT TO    *
*        THE LAST /W OPTION WAS 'A', THEN    *
*        THE REST OF THE LINE WILL BE RUN,   *
*        OTHERNISE THE LINE WILL BE IGNORED. *
*        (MUST BE FOLLOWED BY COMMANDS OR    *
*        OPTIONS.)                           *
*                                            *
*   /L - WILL CHECK TO SEE IF THE SPECIFIED  *
*        FILENAME EXISTS.   RESULTS WILL BE  *
*        RETURNED VIA THE /Z OPTION.     MAY *
*        BE FOLLONED BY MORE COMMANDS AND/OR *
*        OPTIONS.                            *
*                                            *
*   /P - WILL PRINT THE FOLLWING STRING TO   *
*        THE CONSOLE.   WILL PRINT CR/LF IF  *
*        THERE IS NO STRING.                 *
*                                            *
*   /X - CHAIN TO ANOTHER EXEC FILE.   MUST  *
*        BE FOLLOWED BY A FILENAME.          *
*                                            *
*   /W - WAIT FOR ONE OF THE CHARACTERS THAT *
*        FOLLOW THE 'W.   LEADING SPACES     *
*        ARE IGNORED.                        *
*                                            *
*   /Z - MUST BE OF THE FORM /Z=NN, /Z<NN.   *
*        OR /Z>NN WHERE 'NN' IS A DECIMAL    *
*        NUMBER < 256.   IF THE LAST DISK    *
*        OPERATION RETURNED A STATUS IN ,Z,  *
*        THAT SATISFIES THE CONDITION,   THE *
*        REST OF THE LINE WILL BE PROCESSED, *
*        OTHERAISE THE LINE WILL BE IGNORED. *
*        (MUST BE FOLLOWED BY COMMANDS OR    *
*        OPTIONS.)                           *
*                                            *
* WRITTEN BY TIM MCKEE ON 2 SEPT,   1980     *
*                                            *
**********************************************
 SPC  1
* VERSION  1.OO
 SPC 2
* SYSTEM PARAMETERS
OUTCHR EQU 2
INCHR EQU 3
PSTRNG EQU 4
MPX EQU 8
GETLIN EQU 9
SKPSPC EQU 10
PROCMD EQU 12
RPTERR EQU 13
LOCFIL EQU 14
INTFCB EQU 18
OPNFIL EQU 19
RDFIL EQU 21
DECNUM EQU 29
 SPC 1
* OTHER EQUATES
 SPC 1
SYNTAX EQU 16
READ EQU 1
DCBDRV EQU 4
SPACE EQU $20
BELL EQU 7
FFEED EQU $C
FCBSUF EQU $C OFFSET FOR SUFFIX IN FCB
PSYRAM EQU $FFDE
CIOFST EQU $6A OFFSET FOR CIDCB VECTOR
CEOFST EQU $6C OFFSET FOR CEDCB VECTOR
 SPC 3
 ORG 0
 SPC 1
* THIS PROGRAM IS POSITION INDEPENDENT
 SPC 1
EXEC STS STACK,PCR SAVE STACK FOR ERROR RECOVERY
 PSHS X
 LDY PSYRAM
 LEAX CIOFST,Y
 STX CIDCB,PCR SET UP CIDCB VECTOR
 LEAX CEOFST,Y
 STX CEDCB,PCR SET UP CEDCB VECTOR
 PULS X
EXEC1 SWI3
 FCB SKPSPC POINT TO FILENAME
 BNE CONTIN CONTINUE IF NOT END OF LINE
SYNERR LDB #SYNTAX SYNTAX ERROR
DSKERR SWI3
 FCB RPTERR REPORT DISK ERROR
 LDS STACK,PCR RESET STACK POINTER
 RTS
 SPC 1
CONTIN LEAY EXCFCB,PCR POINT TO FILE CONTROL BLOCK
 SWI3
 FCB INTFCB
 BNE DSKERR REPORT DISK ERROR
 TST FCBSUF,Y SEE IF SUFFIX SUPPLIED
 BNE CONTN1 SKIP IF SUPPLIED
 LDD #$4558 DEFAULT TO '.EX'
 STD FCBSUF,Y
CONTN1 LEAX EXCBUF,PCR POINT TO DISK BUFFER
 LDA #READ
 SWI3
 FCB OPNFIL OPEN THE INPUT FILE
 BNE DSKERR REPORT ERRORS
 LEAX DUMMY,PCR USE DUMMY DCB TO GET INPUT
 LEAY FILINP,PCR SET IT UP FOR FILE INPUT
 STY DCBDRV,X
 CLR KEY,PCR INITIALIZE VALUE OF LAST KEYPRESS
MAINLP LDX [CIDCB,PCR]
 STX OLDINP,PCR SAVE CURRENT INPUT DCB VECTOR
 LDX [CEDCB,PCR]
 STX OLDECH,PCR SAVE CURRENT ECHO DCB VECTOR
 LEAX DUMMY,PCR
 STX [CIDCB,PCR] INPUT FROM DUMMY DCB
 ; LDX #0
 ; STX [CEDCB,PCR]
 LEAX LINBUF,PCR POINT UP TO INPUT LINE BUFFER
 LDB #65 ALLOW UP TO 65 CHARACTERS INPUT
 SPC 1
GETLOP SWI3
 FCB GETLIN INPUT A LINE FROM THE FILE
 BEQ GETLOP LOOP ON LINE CANCEL
 LDY OLDINP,PCR
 STY [CIDCB,PCR] RESTORE OLD INPUT DCB VECTOR
 LDY OLDECH,PCR
 STY [CEDCB,PCR] RESTORE OLD ECHO DCB VECTOR
PROLIN SWI3
 FCB SKPSPC POINT TO NEXT WORD IN LINE
 BEQ MAINLP GET NEW LINE IF NO MORE THERE
 CMPA #'* CHECK FOR REMARKS
 BEQ MAINLP IGNORE THEM
 CMPA #'/ CHECK FOR OPTION DECLARATION
 BEQ OPTION PROCESS THEM
 CLR ZRETRN,PCR INITIALIZE 'Z' PRIOR TO DISK OPERATION
 SWI3
 FCB PROCMD ASSUME DISK COMMAND
 BEQ MAINLP CONTINUE IF NO ERRORS
 STS ZRETRN,PCR
 BRA MAINLP SET 'Z' AND LOOP
 SPC 2
FILINP PSHS B,Y
 LEAY EXCFCB,PCR
 LDB #READ
 SWI3
 FCB RDFIL GET A CHARACTER FROM FILE
 LBNE DSKERR REPORT ERRORS
 PULS B,Y,PC
 SPC 3
OPTION LEAX 1,X BUMP POINTER
 LDA ,X+ GET NEXT CHARACTER
 CMPA #'/ CHECK FOR FINISHED MARKER '//'
 BNE OPT1 BRANCH IF NOT
 LDS STACK,PCR
 CLRA
 RTS
OPT1 CMPA #'X CHAIN TO ANOTHER EXEC FILE?
 LBEQ EXEC1 PROCESS IF SO
 CMPA #'P PRINT LINE?
 BNE OPT2 BRANCH IF NOT
 SWI3
 FCB SKPSPC SKIP LEADING SPACES
 TFR X,Y COPY POINTER
OPT1A LDA ,Y+ GET CHARACTER AND BUMP POINTER
 CMPA #$D CHECK FOR END OF LINE
 BNE OPT1A LOOP UNTIL FOUND
 ADDA #$80 SET END OF LINE FOR PSTRNG
 STA ,-Y MARK END OF LINE
 SWI3
 FCB PSTRNG PRINT LINE
 LDA #$A SEND LINE FEED
 SWI3
 FCB OUTCHR
 LBRA MAINLP GET NEW LINE
OPT2 CMPA #'W WAIT COMMAND?
 BNE OPT3
 SWI3
 FCB SKPSPC
 LBSR WAIT WAIT FOR THE CHARACTER
 STA KEY,PCR STORE THE RESPONSE
 LBRA MAINLP GET NEW LINE
OPT3 CMPA #'K IF KEY COMMAND?
 BNE OPT4
 LDD ,X++ GET NEXT TWO CHAPS AND BUMP POINTER
 CMPA #'= MUST FOLLOW /K
 LBNE SYNERR SYNTAX ERROR IF NOT THERE
 CMPB #SPACE
 LBLS SYNERR SYNTAX ERROR IF <= TO SPACE
 CMPB KEY,PCR IS CHARACTER SAME AS LAST KEY?
 LBEQ PROLIN PROCESS LINE IF SO
 LBRA MAINLP NEW LINE OF NOT
OPT4 CMPA #'B BELL COMMAND?
 BNE OPT5
 LDA #BELL
OPT4A SWI3
 FCB OUTCHR
 LBRA PROLIN OTHER COMANDS MAY FOLLOW
OPT5 CMPA #'F FORM FEED COMMAND?
 BNE OPT6
 LDA #FFEED
 BRA OPT4A
OPT6 CMPA #'E ERASE SCREEN?
 BNE OPT7
 PSHS X
 LEAX ERASE,PCR
 SWI3
 FCB PSTRNG SEND STRING TO ERASE SCREEN
 PULS X
 LBRA PROLIN PROCESS REST OF LINE
OPT7 CMPA #'L LOCATE FILE?
 BNE OPT8
 LDB #17 PRESET SYNTAX ERROR
 SWI3
 FCB SKPSPC POINT TO FILENAME
 BEQ OPT7A BRANCH IF NO NAME GIVEN
 LEAY AUXFCB,PCR POINT TO AUXILARY FCB
 SWI3
 FCB INTFCB GET FILENAME
 BNE OPT7A SET 'Z' ON ERROR
 PSHS X
 SWI3
 FCB LOCFIL LOCATE FILE
 PULS X
OPT7A STB ZRETRN,PCR SET 'Z' VALUE
 LBRA PROLIN
OPT8 CMPA #'Z TEST 'Z' VALUE?
 BNE OPT9
 LDA ,X+ GET OPERATOR
 CMPA #'>
 BEQ OPT8A '>' IS LEGAL
 CMPA #'<
 BEQ OPT8A '<' IS LEGAL
 CMPA #'=
 LBNE SYNERR '=' IS ONLY OTHER LEGAL CHARACTER
OPT8A STA ,-S
 SWI3
 FCB SKPSPC POINT TO NUMBER
 LBEQ SYNERR ERROR IF NO NUMBER
 SWI3
 FCB DECNUM GET NUMBER
 TSTA
 LBNE SYNERR ERROR IF NUMBER > 256
 LDA ,S+ RECOVER OPERATOR
 STB ,-S STORE NUMBER VALUE
 LDB ZRETRN,PCR GET VALUE OF 'Z'
 CMPA #'>
 BEQ OPT8C
 CMPA #'<
 BEQ OPT8D
 CMPB ,S+
 LBNE MAINLP
OPT8B LBRA PROLIN
OPT8C CMPB ,S+
 BHI OPT8B
 LBRA MAINLP
OPT8D CMPB ,S+
 BLO OPT8B
 LBRA MAINLP
OPT9 LBRA SYNERR
 SPC 2
WAIT PSHS A,X
 LDX #0
 STX [CEDCB,PCR] TURN ECHO OFF
WAIT1 SWI3
 FCB INCHR GET A CHARACTER OF INPUT
 STA ,S
 LDX 1,S
 LDA ,X
 CMPA #$D
 BEQ WAIT3
WAIT2 LDA ,X+
 CMPA #$D
 BEQ WAIT1
 CMPA ,S
 BNE WAIT2
WAIT3 LDX OLDECH,PCR
 STX [CEDCB,PCR]
 PULS A,X,PC
 SPC 3
ERASE FCB $1A,0,0,0,0,0,0,0,$80
YNSTR FCB 'Y,'N,$D
 SPC 2
CIDCB RMB 2
CEDCB RMB 2
STACK RMB 2
ZRETRN RMB 1
KEY RMB 1
OLDINP RMB 2
OLDECH RMB 2
LINBUF RMB 65
DUMMY RMB 10
EXCFCB RMB 32
EXCBUF RMB 256
AUXFCB RMB 32
 SPC 1
ENDPGM EQU *-1
 END